<?php

namespace app\modules\admin\base;

use yii;
use yii\web\Controller;

class BaseController extends Controller
{

	public function getModel(){
		$name = '\app\models\\' . $this->modelName;
		return new $name();
	}

	public function getModelSearch(){
		$name = '\app\models\\' . $this->modelName . 'Search';
		return new $name();
	}


	public function beforeAction($action)
	{
//		return Yii::$app->getResponse()->redirect('default/login');
//		die('<pre>' . print_r($action,1) . '</pre>');
		if (\Yii::$app->user->isGuest && Yii::$app->controller->action->id != 'login' ) {
			//return Yii::$app->getResponse()->redirect(Yii::$app->getUser()->loginUrl);
			return Yii::$app->getResponse()->redirect('/admin/default/login');
		}
		return parent::beforeAction($action); // TODO: Change the autogenerated stub
	}

	public function actionIndex(){
		$searchModel = $this->getModelSearch();
		$dataProvider = $searchModel->search(Yii::$app->request->queryParams);
		$dataProvider->pagination->pageSize = 10;

		return $this->render('../layouts/index', [
			'searchModel' => $searchModel,
			'searchPanel' => $this->render('_search', ['model' => $searchModel]),
			'dataProvider' => $dataProvider,
		]);

	}

	public function actionDelete($id)
	{
		$this->findModel($id)->delete();

		return $this->redirect(['index']);
	}

	/**
	 * Displays a single City model.
	 * @param integer $id
	 * @return mixed
	 */
	public function actionView($id)
	{
		return $this->render('view', [
			'model' => $this->findModel($id),
		]);
	}

	/**
	 * Creates a new City model.
	 * If creation is successful, the browser will be redirected to the 'view' page.
	 * @return mixed
	 */
	public function actionCreate()
	{
		$model = $this->getModel();

		if ($model->load(Yii::$app->request->post()) && $model->save()) {
			//return $this->redirect(['view', 'id' => $model->id]);
			return $this->redirect(['index']);
		} else {
			return $this->render('create', [
				'model' => $model,
			]);
		}
	}

	/**
	 * Updates an existing City model.
	 * If update is successful, the browser will be redirected to the 'view' page.
	 * @param integer $id
	 * @return mixed
	 */
	public function actionUpdate($id)
	{
		$model = $this->findModel($id);

		if ($model->load(Yii::$app->request->post()) && $model->save()) {
			//return $this->redirect(['view', 'id' => $model->id]);
			return $this->redirect(['index']);
		} else {
			return $this->render('update', [
				'model' => $model,
			]);
		}
	}

	/**
	 * Finds the City model based on its primary key value.
	 * If the model is not found, a 404 HTTP exception will be thrown.
	 * @param integer $id
	 * @return City the loaded model
	 * @throws NotFoundHttpException if the model cannot be found
	 */
	protected function findModel($id)
	{
		$model = $this->getModel();
		if (($model = $model::findOne($id)) !== null) {
			return $model;
		} else {
			throw new NotFoundHttpException('The requested page does not exist.');
		}
	}
	
	
	
}
